问题提出：在状态评估业务模块中，耗时较长：问题可能存在以下
1、后台业务每次查询均新建查询对象，链接数据库耗时

	尝试用c3p0连接池处理，但并未解决！
	主要原因：  float表的记录条数已经达到千万条量级。
	
2、发现每张表内的数据记录都超过4000000行，每次查询一条符合条件的记录，需要花费10+秒

	2.1 尝试从数据库查询语句进行优化
		sql： select * from float_201603 where id=1092 AND time<1456934400 AND time>1456934100;
		在数据库查询时间13.243秒
	2.2 避免在where语句中使用！=，>,<等操作符，将会导致搜索放弃索引而进行全表查询
		select * from float_201603 where id=1092 AND time BETWEEN 1456934100 AND 1456934400;
		在数据库查询时间11.498秒
		但是第二次查询花费时间仅0.619s
		
	2.3 联合查询
		SELECT * FROM( select * from float_201603 where id=1092) a where TIME BETWEEN 1456934100 and 1456934400;
		25.3秒
	2.4 
		这时候表现为没有索引导致：
		表行数很多，由于没有添加索引，需要进行全表扫描，第一次需要从物理磁盘中将全表加载到内存中，很慢。第二次因为全表在内存中 所以查找很快。如果添加了索引的话，就不需要全表扫描，即使第一次也不需要加载全表数据
		
		给表添加索引
	
	2.4 将数据表time列加上索引float_201104_copy  查询
	 select * from float_201104_copy where time BETWEEN 1302243234 AND 1302310263 and id= 923;
	 9S
	 
	 
	 问题还是存在，速度限制在第一次查询时间
	 
	不使用select *  from table，选择确定的字段名
	2.5  以float_201612 为例子  记录条数 27870*1000条数据   
			bool的表查询较快，因为记录数112*576少了好几个数量级
		 select value from float_201612 where id=1092 AND time between 1482335700 AND 1482336000
		 没有加索引 ---》花费时间23秒
		 增加索引
	 （1）在ID上增加索引
		 CREATE CLUSTERED INDEX float_201107_id on float_201107(ID);
		 select value from float_201107 where id=1299 AND time between 1312101111 AND 1312101147
		 第二次查询0.695s
		 花费时间16.9秒（减少了6s  但是没什么卵用）
	 （2）更改查询方式--》联合查询
		 SELECT value from (select * from float_201107 where time BETWEEN 1312101111 AND 1312101147) a where a.id= 1299;
		 17秒
	 
	 （3）在Time上增加索引：：：：：：
		 CREATE CLUSTERED INDEX float_201108_time on float_201108(TIME);
		 《花费一段时间》受影响的行: 0
			时间: 299.235s
			在Time上增加索引：：：：：：后查询
		 select value from float_201108 where id=907 AND time between 1312128001 AND 1312128011;
		 受影响的行: 0
			时间: 2.498s
		
	3、程序修改（重构 改善代码的坏味道）
		（1）相应的业务模块程序中的数据库连接数受到限制，有时候达到十条以上 就会报错
		（2） 业务中每查找一次就会初始化一次实例对象与连接，水泵系统和主变系统已经重写；全部查询并最后关闭连接
		（3） 数据库还有缓存机制，连续查询相同的数据表时，第二次明显快几个数量级，所以把查询语句中相同的表查询，放置在一起。
	
	4、速度貌似还是不快
		此处的状态评估是对当前状态的状态评估，
		可以选择当前时间最近的一条数据进行评估，减少查询时间
	
		
	《《《《处理方法，在float表的time字段上添加索引	》》》》
		详情参考：
		https://www.cnblogs.com/ShaYeBlog/p/3227244.html